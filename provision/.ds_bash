#!/usr/bin/env bash
PROJECT='hsb'
export PROJECT

# Terminal Dark Color Fix
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;97m\]\w\[\033[00m\]\$ '
export PS1

LS_COLORS=$(echo $LS_COLORS | sed -r 's/:di=..;..:/:di=01;97:/g')
export LS_COLORS

# Project Quick move
PROJECT_DIR='/var/www/$PROJECT/dev'
export PROJECT_DIR
alias cdd='cd $PROJECT_DIR;ll'

# Git Short Aliases
alias g='git'
alias gs='git status'
alias gh='git log --oneline -10 --graph'

llog() {
        awk -F'(ERROR\:|\{)' '/^[^#][0-9]/ {printf "\033[1;96m" $2 "\033[1;0m\n" $3 "\n" }' $PROJECT_DIR/storage/logs/laravel.log
}

rpass() {
    if [ $1 ]; then
        LEN=$1
    else
        LEN=32
    fi
    < /dev/urandom tr -dc A-Za-z0-9 | head -c${1:-$LEN}; echo
}

php_set() {
    if [ -z $1 ] || [ -z $2 ]; then
        echo "Args Required: ini paramter, value. "
        echo "E.g.: php_set display_errors On"
    fi
    sudo sed -i "s|^$1.*\$|$1 = $2|" $(php -i | grep 'Loaded Configuration File' | awk '{printf $5}')
    sudo service nginx restart
}

mysqlcms() {
    if [ -z $1 ]; then
        echo "Please specify a project"
        ls /var/www/$PROJECT
        return 1
    fi

    PROJECT_DIR=/var/www/$PROJECT/$1/current

    U=$(awk -F= '{if ($1=="DB_USERNAME") print $2}' $PROJECT_DIR/.env)
    P=$(awk -F= '{if ($1=="DB_PASSWORD") print $2}' $PROJECT_DIR/.env)
    D=$(awk -F= '{if ($1=="DB_DATABASE") print $2}' $PROJECT_DIR/.env)

    echo $U $P $D

    mysql -u $U --password=$P $D
}

mysqlquicksave() {
    if [ -z $1 ]; then
        echo "Please specify a project"
        ls /var/www/$PROJECT
        return 1
    fi

    PROJECT_DIR=/var/www/$PROJECT/$1/current

    filename='mysqlquicksave'
    if [ ! -z $2 ]; then
        filename=$2
    fi

    U=$(awk -F= '{if ($1=="DB_USERNAME") print $2}' $PROJECT_DIR/.env)
    P=$(awk -F= '{if ($1=="DB_PASSWORD") print $2}' $PROJECT_DIR/.env)
    D=$(awk -F= '{if ($1=="DB_DATABASE") print $2}' $PROJECT_DIR/.env)
    T=''

    if [ ! -z $3 ]; then
        T=$3
    fi

    echo "mysqldump $D $T > ~/$filename.db"
    mysqldump -u $U --password=$P $D $T > ~/$filename.db
}

mysqlquickres() {
    if [ -z $1 ]; then
        echo "Please specify a project"
        ls /var/www/$PROJECT
        return 1
    fi

    PROJECT_DIR=/var/www/$PROJECT/$1/current

    filename='mysqlquicksave'
    if [ ! -z $2 ]; then
        filename=$2
    fi

    if [ ! -f ~/$filename.db ]; then
        echo "Quicksave not found: ~/$filename.db"
        return 1
    fi

    U=$(awk -F= '{if ($1=="DB_USERNAME") print $2}' $PROJECT_DIR/.env)
    P=$(awk -F= '{if ($1=="DB_PASSWORD") print $2}' $PROJECT_DIR/.env)
    D=$(awk -F= '{if ($1=="DB_DATABASE") print $2}' $PROJECT_DIR/.env)

    echo "mysql $D < ~/$filename.db"
    mysql -u $U --password=$P $D < ~/$filename.db
}

buildlinks() {
    mkdir ~/admin
    mkdir ~/admin/log
    mkdir ~/admin/config
    ln -s /etc/nginx/conf.d ~/admin/config/nginx
    ln -s /etc/rabbitmq ~/admin/config/rabbitmq
    ln -s /etc/dsreplicator ~/admin/config/dsreplicator
    ln -s /run/php ~/admin/config/phpsock
    ln -s /var/log/nginx/error.log ~/admin/log/nginx
    ln -s /var/log/dsreplicator/services.log ~/admin/log/dsreplicator
    ln -s /var/log/mysql/mysql.err ~/admin/log/mysql.err
    ln -s /var/log/mysql/error.log ~/admin/log/myerror.log
    if [ -d ~/dev ]; then
        if [ -d /var/www/$PROJECT/dev ]; then
            ln -s /var/www/$PROJECT/dev/current ~/dev
            ln -s ~/dev/storage/logs ~/admin/log/dev
        fi
    fi
}

npmfix() {
    # VM permissions issues for VirtualBox: Windows host - linux guest
    # instead of loading npm into windows share, load node_modules only in the VM
    # by mounting a directory over the share

    if [ ! -d ~/dev ]; then
      echo "link to project dev missing: ~/dev"
      echo "please run . ~/.ds_bash"
      echo "or ln -s /var/www/project/dev/current ~/dev"
      return 1
    else
      echo "Mounting ~/dev_node_modules to ~/dev/node_modules"
      rm -rdf ~/dev/node_modules
      mkdir ~/dev/node_modules
      mkdir ~/dev_node_modules
      cd ~/dev
      sudo mount -o bind ~/dev_node_modules node_modules
      echo "Mount complete, run:"
      echo "    npm install"
    fi
}

if [ -f ~/.bash_profile ]; then
  tgtFile="$HOME/.bash_profile"
elif [ -f ~/.profile ]; then
  tgtFile="$HOME/.profile"
fi

if [ -f "$tgtFile" ] && [ -r "$tgtFile" ] && [ -w "$tgtFile" ] && ! grep -q ds_bash $tgtFile; then
  printf "\n\n if [ -f ~/.ds_bash ]; then\n     . ~/.ds_bash\n fi\n\n" >> $tgtFile
fi

if [ ! -f ~/.vimrc ]; then
  echo "colo slate" > ~/.vimrc
fi